{"version":3,"sources":["components/Note.js","components/Form.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Form","addNote","updateTextField","text","onSubmit","value","onChange","type","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","setText","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","catch","error","updateShowAll","notesToShow","filter","map","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","event","preventDefault","target","newNoteObject","date","Date","toISOString","Math","random","newNotes","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2b88fb8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note,toggleImportance}) => {\n    const label = note.important ? 'make not important' : 'make important'\n    return (\n        <div>\n            <li className=\"note\">{note.content} <button onClick={toggleImportance}>{label}</button> </li>\n            \n        </div>\n    );\n};\n\nexport default Note;","import React from 'react';\n\n\nconst Form = ({addNote,updateTextField,text}) => {\n    return(\n      <div>\n         <form onSubmit={addNote} >\n          <input value={text} onChange = {updateTextField}/>\n          <button type=\"submit\">save</button>\n        </form>\n      </div>\n    )\n  }\n\nexport default Form;","const Notification = ({message}) => {\n    if(message === null){\n        return null\n    }\n\n    return(\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {getAll , create , update }","import React, {useState,useEffect} from 'react'\nimport Note from './components/Note'\nimport Form from './components/Form'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n\n  const [notes,setNotes] = useState([])\n  const [text,setText] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage,setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    noteService.getAll().then(initialNotes => {\n      console.log('promise fulfilled, notes retrieved')\n      setNotes(initialNotes)\n    }).catch(error => {\n      console.log(\"error in getAll call in APP\",error)\n    })\n  },[])\n\n\n  const toggleImportanceOf = (id) => {\n    console.log('importance of ' + id + ' needs to be toggled')\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note,important:!note.important}\n\n    noteService.update(id,changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id? note : returnedNote))\n    }).catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n\n        setNotes(notes.filter(n=>n.id!==id))\n      })\n          \n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button cicked', event.target)\n    var newNoteObject = {\n      // id:notes.length+1,\n      content:text,\n      date: new Date().toISOString(),\n      important:Math.random() < 0.5\n    }\n\n    noteService.create(newNoteObject).then(\n      returnedNote => {\n        console.log(returnedNote)\n        var newNotes = notes.concat(returnedNote)\n        setNotes(newNotes)\n        setText('')\n      }\n    ).catch(error => {\n      console.log(\"error in create in App add note\",error)\n    })\n    \n  }\n\n\n  const updateTextField = (event) => {\n    event.preventDefault()\n    setText(event.target.value)\n  }\n\n  const updateShowAll = () => { //caused by pressing button\n    setShowAll(!showAll)\n  }\n\n  const notesToShow = showAll ? notes:notes.filter(note=>note.important)\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <ul>\n        {notesToShow.map((note) => \n        <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/> //key is added to the note component\n        )}\n      </ul>\n      \n      <Form addNote={addNote} updateTextField={updateTextField} updateShowAll={updateShowAll} notesToShow={notesToShow} showAll={showAll} text={text}/>\n      <button onClick={updateShowAll}>{showAll?'important' : 'all'}</button>\n      \n    </div>\n  )\n}\n\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}